/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package sandbox.explorer

import arrow.fx.IO
import arrow.fx.extensions.fx
import arrow.fx.fix
import org.jetbrains.exposed.sql.Database
import org.jetbrains.exposed.sql.transactions.TransactionManager
import sandbox.explorer.logic.CsvUserImporter
import sandbox.explorer.logic.GitHubApiCaller
import sandbox.explorer.logic.GitHubMetricConverter
import java.io.File
import java.sql.Connection

fun main(args: Array<String>) = IO.fx {
    val db = App.connectToDatabase()

    val eitherPeople = ! CsvUserImporter.importUsers.value().fix()

    eitherPeople.map { people ->
        people.map { aPerson ->
            val eitherGitHubInfo = GitHubApiCaller.callApi(aPerson.gitHubUsername).value().fix().unsafeRunSync()
            eitherGitHubInfo.map { gitHubInfo ->
                val eitherGitHubUserInfo = GitHubUserInfo.deserializeFromJson2(gitHubInfo).value().fix().unsafeRunSync()

                eitherGitHubUserInfo.map { gitHubUserInfo ->
                    GitHubMetricConverter.convertAndSaveData(gitHubUserInfo, aPerson).value().fix().unsafeRunSync()
                }
            }
        }
    }
}.unsafeRunSync()

object App {
    fun connectToDatabase(): Database {
        val filePath = File("db/explorer-db.sqlt").getAbsolutePath()
        val db = Database.connect("jdbc:sqlite:$filePath", "org.sqlite.JDBC")
        db.useNestedTransactions = true
        TransactionManager.manager.defaultIsolationLevel = Connection.TRANSACTION_SERIALIZABLE
        return db
    }
}
